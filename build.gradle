buildscript {
    ext {
        springBootVersion = '2.2.0.RELEASE'
        springRepo = 'http://repo.spring.io/libs-release'
        dubboVersion = '2.7.1'
    }

////        springBootVersion = '2.2.0.M4'
//        springRepo = 'http://repo.spring.io/milestone'
//
//    }
    repositories {
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url springRepo }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
//        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.springframework:springloaded:1.2.0.RELEASE'
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id "com.github.hierynomus.license" version "0.15.0"
    id "io.freefair.lombok" version "4.1.0"
    id 'idea'
}

ext.configDir = "${project.rootDir}/config"
ext.checkstyleDir = "${configDir}/checkstyle"
ext.gradleConfigDir = "${configDir}/gradle"
ext.vJavaLang = '1.8'

wrapper.gradleVersion = '5.4.1'


apply from: "${gradleConfigDir}/env.gradle"


ext.javaProjects = subprojects.findAll {
    !it.name.endsWith("template")
}

configure(javaProjects) { project ->
    apply from: "${gradleConfigDir}/javaProject.gradle"

    apply plugin: 'checkstyle'
    checkstyle {
        toolVersion "8.21"
        configFile file("${checkstyleDir}/checkstyle.xml")
        configProperties.checkstyleSuppressionsPath = file("${checkstyleDir}/suppressions.xml").absolutePath
    }

    checkstyleMain {
        source = 'src/main/java'
    }

    checkstyleTest {
        source = 'src/test/java'
    }


    group "com.github.flycat"
    version "0.0.1-SNAPSHOT"


    targetCompatibility = vJavaLang
    sourceCompatibility = vJavaLang

    configurations {

//        all*.exclude group: 'org.hibernate.validator'

        // use fastjson
//        all*.exclude group: 'com.fasterxml.jackson.core'
//        all*.exclude group: 'com.fasterxml.jackson.datatype'
//        all*.exclude group: 'com.fasterxml.jackson.module'

        // replaced with jcl-over-slf4j
        all*.exclude group: 'commons-logging', module: 'commons-logging'
        // replaced with log4j-over-slf4j
        all*.exclude group: 'log4j', module: 'log4j'
//        compile.exclude module: "spring-boot-starter-tomcat"
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    apply plugin: 'com.github.hierynomus.license'

    license {
        header rootProject.file("LICENSE")
    }

    license {
        header = rootProject.file('LICENSE')
        ext.year = Calendar.getInstance().get(Calendar.YEAR)
        ext.name = 'zgqq'
        ext.email = 'zgqjava@gmail.com'
        exclude "**/*Test.java"
        include "**/*.groovy"
        includes(["**/*.java", "**/*.properties"])
    }
}

ext.bootProjects = javaProjects.findAll {
    it.name.startsWith("flycat-springboot-sba")
}

configure(bootProjects) { project ->
    apply from: "${gradleConfigDir}/bootProject.gradle"
}

