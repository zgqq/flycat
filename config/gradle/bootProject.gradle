apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: "java"
apply plugin: 'application'
apply from: "${gradleConfigDir}/tasks.gradle"
processResources.dependsOn copyConfiguration

ext.springJvmArgs = ["-Dspring.profiles.active=$env"]

if (vJavaLang == '1.11') {
    ext.appJvmArgs = ext.springJvmArgs + [
            "-Dfile.encoding=UTF-8",
            "-Xlog:gc*",
            "-XX:-OmitStackTraceInFastThrow"]
} else {
    ext.appJvmArgs = ext.springJvmArgs + [
            "-Dfile.encoding=UTF-8",
            "-XX:+PrintGCDetails",
            "-XX:+PrintGCTimeStamps",
            "-XX:-OmitStackTraceInFastThrow"]
}


if (!isProd(env)) {
    ext.appJvmArgs += ["-noverify"
                   , "-XX:TieredStopAtLevel=1"
                   , "-XX:+AlwaysPreTouch"]
}


ext.debugServerPort = 5005
if (hasProperty("debugPort")) {
    ext.debugServerPort = "$debugPort"
}

if (isTestServer(env)) {
    ext.appJvmArgs += ["-Xdebug",
                   "-Xnoagent",
                   "-Djava.compiler=NONE",
                   "-Xrunjdwp:transport=dt_socket,address=${ext.debugServerPort},server=y,suspend=n"]
}



version = env
if (isProd(env)) {
    version += '-' + (new Date().format("yyyyMMdd_HHmmss"))
}


defaultTasks 'compileJava', 'checkStyle'

distZip.enabled = false
distTar.enabled = false
//bootDistTar.enabled = false
bootDistZip.enabled = false

//    processResources.dependsOn copyConfiguration

dependencies {
//        testCompile "org.springframework:spring-test"
//        testCompile "org.springframework.boot:spring-boot-test"
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    testCompile group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc'
}

bootJar {
    archiveClassifier = 'boot'
}


configurations {

    // replaced with jcl-over-slf4j
    all*.exclude group: 'commons-logging', module: 'commons-logging'
    // replaced with log4j-over-slf4j
    all*.exclude group: 'log4j', module: 'log4j'
//    compile.exclude module: "spring-boot-starter-tomcat"
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}


